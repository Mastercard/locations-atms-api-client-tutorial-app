/*
 * ATM Locations API
 * ATM Locations API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.atms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.api.atms.model.Atm;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Atms
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-02T08:45:21.825725200-05:00[America/Chicago]")
public class Atms {
  public static final String SERIALIZED_NAME_COUNT = "count";
  @SerializedName(SERIALIZED_NAME_COUNT)
  private Integer count;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public static final String SERIALIZED_NAME_ATMS = "atms";
  @SerializedName(SERIALIZED_NAME_ATMS)
  private List<Atm> atms = null;


  public Atms count(Integer count) {
    
    this.count = count;
    return this;
  }

   /**
   * The number of items in the retrieved data set
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "The number of items in the retrieved data set")

  public Integer getCount() {
    return count;
  }


  public void setCount(Integer count) {
    this.count = count;
  }


  public Atms limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The number of items requested to be retrieved
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "The number of items requested to be retrieved")

  public Integer getLimit() {
    return limit;
  }


  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public Atms offset(Integer offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * The page offset used for the query
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The page offset used for the query")

  public Integer getOffset() {
    return offset;
  }


  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  public Atms total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * The total number of ATMs available to be retrieved
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "210", value = "The total number of ATMs available to be retrieved")

  public Integer getTotal() {
    return total;
  }


  public void setTotal(Integer total) {
    this.total = total;
  }


  public Atms atms(List<Atm> atms) {
    
    this.atms = atms;
    return this;
  }

  public Atms addAtmsItem(Atm atmsItem) {
    if (this.atms == null) {
      this.atms = new ArrayList<Atm>();
    }
    this.atms.add(atmsItem);
    return this;
  }

   /**
   * The list of ATMs retrieved
   * @return atms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of ATMs retrieved")

  public List<Atm> getAtms() {
    return atms;
  }


  public void setAtms(List<Atm> atms) {
    this.atms = atms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Atms atms = (Atms) o;
    return Objects.equals(this.count, atms.count) &&
        Objects.equals(this.limit, atms.limit) &&
        Objects.equals(this.offset, atms.offset) &&
        Objects.equals(this.total, atms.total) &&
        Objects.equals(this.atms, atms.atms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, limit, offset, total, atms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Atms {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    atms: ").append(toIndentedString(atms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

